{
  "url": "https://api.github.com/repos/alibaba/weex/issues/1644",
  "repository_url": "https://api.github.com/repos/alibaba/weex",
  "labels_url": "https://api.github.com/repos/alibaba/weex/issues/1644/labels{/name}",
  "comments_url": "https://api.github.com/repos/alibaba/weex/issues/1644/comments",
  "events_url": "https://api.github.com/repos/alibaba/weex/issues/1644/events",
  "html_url": "https://github.com/alibaba/weex/pull/1644",
  "id": 189333768,
  "number": 1644,
  "title": "[jsfm] Implement the BroadcastChannel API",
  "user": {
    "login": "Hanks10100",
    "id": 8401776,
    "avatar_url": "https://avatars3.githubusercontent.com/u/8401776?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Hanks10100",
    "html_url": "https://github.com/Hanks10100",
    "followers_url": "https://api.github.com/users/Hanks10100/followers",
    "following_url": "https://api.github.com/users/Hanks10100/following{/other_user}",
    "gists_url": "https://api.github.com/users/Hanks10100/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Hanks10100/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Hanks10100/subscriptions",
    "organizations_url": "https://api.github.com/users/Hanks10100/orgs",
    "repos_url": "https://api.github.com/users/Hanks10100/repos",
    "events_url": "https://api.github.com/users/Hanks10100/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Hanks10100/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 359381537,
      "url": "https://api.github.com/repos/alibaba/weex/labels/js%20runtime",
      "name": "js runtime",
      "color": "f9d0c4",
      "default": false
    },
    {
      "id": 473484279,
      "url": "https://api.github.com/repos/alibaba/weex/labels/new%20feature",
      "name": "new feature",
      "color": "1d76db",
      "default": false
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Jinjiang",
    "id": 206848,
    "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jinjiang",
    "html_url": "https://github.com/Jinjiang",
    "followers_url": "https://api.github.com/users/Jinjiang/followers",
    "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
    "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
    "repos_url": "https://api.github.com/users/Jinjiang/repos",
    "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Jinjiang",
      "id": 206848,
      "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jinjiang",
      "html_url": "https://github.com/Jinjiang",
      "followers_url": "https://api.github.com/users/Jinjiang/followers",
      "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
      "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
      "repos_url": "https://api.github.com/users/Jinjiang/repos",
      "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": [
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/260589221",
      "html_url": "https://github.com/alibaba/weex/pull/1644#issuecomment-260589221",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1644",
      "id": 260589221,
      "user": {
        "login": "Hanks10100",
        "id": 8401776,
        "avatar_url": "https://avatars3.githubusercontent.com/u/8401776?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Hanks10100",
        "html_url": "https://github.com/Hanks10100",
        "followers_url": "https://api.github.com/users/Hanks10100/followers",
        "following_url": "https://api.github.com/users/Hanks10100/following{/other_user}",
        "gists_url": "https://api.github.com/users/Hanks10100/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Hanks10100/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Hanks10100/subscriptions",
        "organizations_url": "https://api.github.com/users/Hanks10100/orgs",
        "repos_url": "https://api.github.com/users/Hanks10100/repos",
        "events_url": "https://api.github.com/users/Hanks10100/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Hanks10100/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-15T09:22:03Z",
      "updated_at": "2016-11-15T09:25:14Z",
      "body": "One thing should be noticed: **The `message` object is not deep cloned.**\n\nSee the demo below:\n\n``` js\nconst a = new BroadcastChannel('app')\nconst b = new BroadcastChannel('app')\n\nconst message = {\n  lists: ['A', 'B']\n}\n\na.onmessage = function (event) {\n\n  // in this case, event.data is a reference of message\n  console.assert(event.data === message)\n\n}\n\nb.postMessage(message)\n```\n\nIn this case, `event.data` is strict equal to `message`.\n\nCompared to the deep clone, this behavior improves efficiency and reduces memory cost. However, developers are not recommended to cache or modify the `event` object when they are using it (All type of event handlers should have this restriction).\n"
    }
  ],
  "created_at": "2016-11-15T08:56:36Z",
  "updated_at": "2016-12-14T03:52:31Z",
  "closed_at": "2016-12-14T03:52:31Z",
  "pull_request": {
    "url": "https://api.github.com/repos/alibaba/weex/pulls/1644",
    "html_url": "https://github.com/alibaba/weex/pull/1644",
    "diff_url": "https://github.com/alibaba/weex/pull/1644.diff",
    "patch_url": "https://github.com/alibaba/weex/pull/1644.patch"
  },
  "body": "`BroadcastChannel` API is the solution for inter-instance communication. See #1536 for more detail.\r\n\r\n##  Reference\r\n\r\n+ [BroadcastChannel specification](https://html.spec.whatwg.org/multipage/comms.html#broadcasting-to-other-browsing-contexts).\r\n+ [MessageEvent specification](https://html.spec.whatwg.org/multipage/comms.html#messageevent)\r\n\r\n## API\r\n\r\n+ `postMessage`: Sends the given message to other BroadcastChannel objects set up for this channel.\r\n+ `close`: Closes the BroadcastChannel object, opening it up to garbage collection.\r\n\r\n## Usage\r\n\r\n```js\r\nconst Stack = new BroadcastChannel('Avengers')\r\nStack.onmessage = function (event) {\r\n  console.log(event.data) // in this case, it's \"Hulk Smash !!!\"\r\n}\r\n\r\n// in another instance\r\nconst Hulk = new BroadcastChannel('Avengers')\r\nHulk.postMessage(\"Hulk Smash !!!\")\r\n```\r\n\r\nRun the code above, Stack can receive the message from Hulk."
}
