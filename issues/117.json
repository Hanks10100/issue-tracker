{
  "url": "https://api.github.com/repos/alibaba/weex/issues/117",
  "repository_url": "https://api.github.com/repos/alibaba/weex",
  "labels_url": "https://api.github.com/repos/alibaba/weex/issues/117/labels{/name}",
  "comments_url": "https://api.github.com/repos/alibaba/weex/issues/117/comments",
  "events_url": "https://api.github.com/repos/alibaba/weex/issues/117/events",
  "html_url": "https://github.com/alibaba/weex/issues/117",
  "id": 151564921,
  "number": 117,
  "title": "Data querying and manipulation with a server",
  "user": {
    "login": "smolinari",
    "id": 3314957,
    "avatar_url": "https://avatars3.githubusercontent.com/u/3314957?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/smolinari",
    "html_url": "https://github.com/smolinari",
    "followers_url": "https://api.github.com/users/smolinari/followers",
    "following_url": "https://api.github.com/users/smolinari/following{/other_user}",
    "gists_url": "https://api.github.com/users/smolinari/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/smolinari/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smolinari/subscriptions",
    "organizations_url": "https://api.github.com/users/smolinari/orgs",
    "repos_url": "https://api.github.com/users/smolinari/repos",
    "events_url": "https://api.github.com/users/smolinari/events{/privacy}",
    "received_events_url": "https://api.github.com/users/smolinari/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 339914708,
      "url": "https://api.github.com/repos/alibaba/weex/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb",
      "default": true
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "Jinjiang",
    "id": 206848,
    "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Jinjiang",
    "html_url": "https://github.com/Jinjiang",
    "followers_url": "https://api.github.com/users/Jinjiang/followers",
    "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
    "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
    "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
    "repos_url": "https://api.github.com/users/Jinjiang/repos",
    "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "Jinjiang",
      "id": 206848,
      "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jinjiang",
      "html_url": "https://github.com/Jinjiang",
      "followers_url": "https://api.github.com/users/Jinjiang/followers",
      "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
      "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
      "repos_url": "https://api.github.com/users/Jinjiang/repos",
      "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": [
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/215342975",
      "html_url": "https://github.com/alibaba/weex/issues/117#issuecomment-215342975",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/117",
      "id": 215342975,
      "user": {
        "login": "luics",
        "id": 1018815,
        "avatar_url": "https://avatars0.githubusercontent.com/u/1018815?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luics",
        "html_url": "https://github.com/luics",
        "followers_url": "https://api.github.com/users/luics/followers",
        "following_url": "https://api.github.com/users/luics/following{/other_user}",
        "gists_url": "https://api.github.com/users/luics/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/luics/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luics/subscriptions",
        "organizations_url": "https://api.github.com/users/luics/orgs",
        "repos_url": "https://api.github.com/users/luics/repos",
        "events_url": "https://api.github.com/users/luics/events{/privacy}",
        "received_events_url": "https://api.github.com/users/luics/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-28T08:09:48Z",
      "updated_at": "2016-04-28T08:09:48Z",
      "body": "Wonderful idea! \n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/215940199",
      "html_url": "https://github.com/alibaba/weex/issues/117#issuecomment-215940199",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/117",
      "id": 215940199,
      "user": {
        "login": "smolinari",
        "id": 3314957,
        "avatar_url": "https://avatars3.githubusercontent.com/u/3314957?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/smolinari",
        "html_url": "https://github.com/smolinari",
        "followers_url": "https://api.github.com/users/smolinari/followers",
        "following_url": "https://api.github.com/users/smolinari/following{/other_user}",
        "gists_url": "https://api.github.com/users/smolinari/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/smolinari/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/smolinari/subscriptions",
        "organizations_url": "https://api.github.com/users/smolinari/orgs",
        "repos_url": "https://api.github.com/users/smolinari/repos",
        "events_url": "https://api.github.com/users/smolinari/events{/privacy}",
        "received_events_url": "https://api.github.com/users/smolinari/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-30T05:43:13Z",
      "updated_at": "2016-04-30T05:51:46Z",
      "body": "This library might also be helpful. \n\nhttps://github.com/apollostack/apollo-client\n\nUse it with a Redux store and you have a pretty powerful GraphQL system. They are also planning to incorporate the fragment collection in components. So, everything that is needed will be available. \n\nOr, you can figure out how to connect it to Vuex. That might also be a cool solution too. \n\nScott\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/215943080",
      "html_url": "https://github.com/alibaba/weex/issues/117#issuecomment-215943080",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/117",
      "id": 215943080,
      "user": {
        "login": "Jinjiang",
        "id": 206848,
        "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jinjiang",
        "html_url": "https://github.com/Jinjiang",
        "followers_url": "https://api.github.com/users/Jinjiang/followers",
        "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
        "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
        "repos_url": "https://api.github.com/users/Jinjiang/repos",
        "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-30T07:05:18Z",
      "updated_at": "2016-04-30T07:05:18Z",
      "body": "Thx @smolinari That's great!\n\nI understand this as a responsive server data way. Both this and Vuex will power Weex up. We can bring them on in the future.\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/215961074",
      "html_url": "https://github.com/alibaba/weex/issues/117#issuecomment-215961074",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/117",
      "id": 215961074,
      "user": {
        "login": "smolinari",
        "id": 3314957,
        "avatar_url": "https://avatars3.githubusercontent.com/u/3314957?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/smolinari",
        "html_url": "https://github.com/smolinari",
        "followers_url": "https://api.github.com/users/smolinari/followers",
        "following_url": "https://api.github.com/users/smolinari/following{/other_user}",
        "gists_url": "https://api.github.com/users/smolinari/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/smolinari/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/smolinari/subscriptions",
        "organizations_url": "https://api.github.com/users/smolinari/orgs",
        "repos_url": "https://api.github.com/users/smolinari/repos",
        "events_url": "https://api.github.com/users/smolinari/events{/privacy}",
        "received_events_url": "https://api.github.com/users/smolinari/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-30T12:39:54Z",
      "updated_at": "2016-04-30T12:39:54Z",
      "body": "That sounds great! I think Facebook hit gold with the GraphQL API. They went out to solve a bunch of big basic problems with REST APIs and found it in GraphQL. \n\nDoes Weex use Ajax/ REST currently? \n\nScott\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/218055918",
      "html_url": "https://github.com/alibaba/weex/issues/117#issuecomment-218055918",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/117",
      "id": 218055918,
      "user": {
        "login": "Jinjiang",
        "id": 206848,
        "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jinjiang",
        "html_url": "https://github.com/Jinjiang",
        "followers_url": "https://api.github.com/users/Jinjiang/followers",
        "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
        "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
        "repos_url": "https://api.github.com/users/Jinjiang/repos",
        "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-10T04:23:48Z",
      "updated_at": "2016-05-10T04:23:48Z",
      "body": "Currently we have a simple [`sendHttp`](https://github.com/alibaba/weex/blob/dev/doc/modules/stream.md#sendhttpparams-callback) API to use. Well I think that's not enough. Need to be enhanced.\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/218059014",
      "html_url": "https://github.com/alibaba/weex/issues/117#issuecomment-218059014",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/117",
      "id": 218059014,
      "user": {
        "login": "smolinari",
        "id": 3314957,
        "avatar_url": "https://avatars3.githubusercontent.com/u/3314957?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/smolinari",
        "html_url": "https://github.com/smolinari",
        "followers_url": "https://api.github.com/users/smolinari/followers",
        "following_url": "https://api.github.com/users/smolinari/following{/other_user}",
        "gists_url": "https://api.github.com/users/smolinari/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/smolinari/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/smolinari/subscriptions",
        "organizations_url": "https://api.github.com/users/smolinari/orgs",
        "repos_url": "https://api.github.com/users/smolinari/repos",
        "events_url": "https://api.github.com/users/smolinari/events{/privacy}",
        "received_events_url": "https://api.github.com/users/smolinari/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-10T04:55:32Z",
      "updated_at": "2016-05-10T04:55:32Z",
      "body": "I also learned that a Redux storage system isn't the right solution for Vue, as it doesn't take Vue's type of reactivity system into account (i.e. virtual DOM diffing or dirty checking against Vue's way of two-way bindings). This concern will cause performance problems later. So, the better solution is to go with Vuex and connect up a GraphQL client like Apollo directly.\n\nScott\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/255674676",
      "html_url": "https://github.com/alibaba/weex/issues/117#issuecomment-255674676",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/117",
      "id": 255674676,
      "user": {
        "login": "Jinjiang",
        "id": 206848,
        "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jinjiang",
        "html_url": "https://github.com/Jinjiang",
        "followers_url": "https://api.github.com/users/Jinjiang/followers",
        "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
        "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
        "repos_url": "https://api.github.com/users/Jinjiang/repos",
        "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-10-24T08:08:09Z",
      "updated_at": "2016-10-24T08:08:09Z",
      "body": "Hi @smolinari , this issue will be collected into #1494 which collects all new feature requests and inactive open discussions. We hope to do this to make sure the open issues represent current focus and active jobs in community and the team. If we decide to resolve this problem or make it active. It will be reopened again.\nThanks for your support :-)\n"
    }
  ],
  "created_at": "2016-04-28T07:07:59Z",
  "updated_at": "2016-10-24T08:08:09Z",
  "closed_at": "2016-10-24T08:08:09Z",
  "body": "How does Weex communicate with a server? \n\nWould you be interested in building in a GraphQL API or can one be added? This would allow the weex components to have the data query definitions within them too! I am not the best JS programmer, but I think this example expresses the idea. It is probably wrong though and has wide reaching engineering implications, I know. Still.... :smile: \n\n```\n<template>\n  <div style=\"flex-direction: column;\">\n    <slider class=\"slider\" interval=\"{{intervalValue}}\" auto-play=\"{{isAutoPlay}}\" >\n      <div class=\"slider-pages\" repeat=\"{{itemList}}\" onclick=\"goWeexSite\" >\n        <image class=\"thumb\" src=\"{{pictureUrl}}\"></image>\n        <text class=\"title\">{{title}}</text>\n      </div>\n    </slider>\n\n  <div class=\"container\" onclick=\"goWeexSite\" >\n    <div class=\"cell\">\n       <image class=\"thumb\" src=\"http://t.cn/RGE3AJt\"></image>  \n       <text class=\"title\">JavaScript</text>\n    </div>\n    <div class=\"cell\">\n       <image class=\"thumb\" src=\"http://t.cn/RGE3uo9\"></image>\n       <text class=\"title\">Java</text>\n    </div>\n    <div class=\"cell\">\n       <image class=\"thumb\" src=\"http://t.cn/RGE31hq\"></image>  \n       <text class=\"title\">Objective C</text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .cell{margin-top:10 ; margin-left:10 ; flex-direction: row; }\n  .thumb {width: 200; height: 200; }\n  .title {text-align: center ; flex: 1; color: grey; font-size: 50; }\n  .slider {\n        margin: 18;\n        width: 714;\n        height: 230;\n  }\n  .slider-pages {\n        flex-direction: row;\n        width: 714;\n        height: 200;\n  }  \n</style>\n\n<script>\nmodule.exports = {\n    data: sliderDemo,\n    methods: {\n      goWeexSite: function () {\n        this.$openURL('http://alibaba.github.io/weex/')\n      }       \n    }\n}\n</script>\n\n<data>\n  weexQL.createContainer(SliderDemo, {\n  fragments: {\n    sliderDemo: () => weexQL.query\n      fragment on SliderDemo {\n          intervalValue,\n          isShowIndicators,\n          isAutoPlay,\n          itemList{...}\n      }\n  }\n</data>\n```\n\nI just think the concept of GraphQL and how Relay works with React is exceptional. It puts everything anyone might need to think about in one single file.\n\nScott\n"
}
