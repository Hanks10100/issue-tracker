{
  "url": "https://api.github.com/repos/alibaba/weex/issues/1649",
  "repository_url": "https://api.github.com/repos/alibaba/weex",
  "labels_url": "https://api.github.com/repos/alibaba/weex/issues/1649/labels{/name}",
  "comments_url": "https://api.github.com/repos/alibaba/weex/issues/1649/comments",
  "events_url": "https://api.github.com/repos/alibaba/weex/issues/1649/events",
  "html_url": "https://github.com/alibaba/weex/issues/1649",
  "id": 189628202,
  "number": 1649,
  "title": "Better to use environment concept",
  "user": {
    "login": "seajean",
    "id": 1409603,
    "avatar_url": "https://avatars3.githubusercontent.com/u/1409603?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/seajean",
    "html_url": "https://github.com/seajean",
    "followers_url": "https://api.github.com/users/seajean/followers",
    "following_url": "https://api.github.com/users/seajean/following{/other_user}",
    "gists_url": "https://api.github.com/users/seajean/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/seajean/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/seajean/subscriptions",
    "organizations_url": "https://api.github.com/users/seajean/orgs",
    "repos_url": "https://api.github.com/users/seajean/repos",
    "events_url": "https://api.github.com/users/seajean/events{/privacy}",
    "received_events_url": "https://api.github.com/users/seajean/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": [
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/260897450",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-260897450",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 260897450,
      "user": {
        "login": "seajean",
        "id": 1409603,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1409603?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/seajean",
        "html_url": "https://github.com/seajean",
        "followers_url": "https://api.github.com/users/seajean/followers",
        "following_url": "https://api.github.com/users/seajean/following{/other_user}",
        "gists_url": "https://api.github.com/users/seajean/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/seajean/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seajean/subscriptions",
        "organizations_url": "https://api.github.com/users/seajean/orgs",
        "repos_url": "https://api.github.com/users/seajean/repos",
        "events_url": "https://api.github.com/users/seajean/events{/privacy}",
        "received_events_url": "https://api.github.com/users/seajean/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-16T09:32:05Z",
      "updated_at": "2016-11-16T09:32:05Z",
      "body": "Another problem problem we are facing now is that too much thing was done when creating an instance,  if we prepare the environment first and the creating time will be much shorter.\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/261118902",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-261118902",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 261118902,
      "user": {
        "login": "Jinjiang",
        "id": 206848,
        "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jinjiang",
        "html_url": "https://github.com/Jinjiang",
        "followers_url": "https://api.github.com/users/Jinjiang/followers",
        "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
        "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
        "repos_url": "https://api.github.com/users/Jinjiang/repos",
        "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-17T00:37:30Z",
      "updated_at": "2016-11-17T00:38:29Z",
      "body": "If the framework code is not stable enough, I have two advices:\n1. make the update as backward compatible as possible.\n2. do not put the unstable code into the framework. Just use it in JS bundle first.\n\nAnd I'm not quite sure about what `createEnv` will do. It's better to have more specific example if you don't mind.\n\nThe second question is about inter-instance communications. We had another issue #1536 and implementation #1644 about this in discussion.\n\nThanks.\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/261170795",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-261170795",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 261170795,
      "user": {
        "login": "seajean",
        "id": 1409603,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1409603?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/seajean",
        "html_url": "https://github.com/seajean",
        "followers_url": "https://api.github.com/users/seajean/followers",
        "following_url": "https://api.github.com/users/seajean/following{/other_user}",
        "gists_url": "https://api.github.com/users/seajean/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/seajean/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seajean/subscriptions",
        "organizations_url": "https://api.github.com/users/seajean/orgs",
        "repos_url": "https://api.github.com/users/seajean/repos",
        "events_url": "https://api.github.com/users/seajean/events{/privacy}",
        "received_events_url": "https://api.github.com/users/seajean/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-17T06:59:20Z",
      "updated_at": "2016-11-17T07:00:43Z",
      "body": "Maybe the framework can be backward compatible, but not the build-in-lib,  With environment, we can split our code into 3 parts, the js-framework, the build-in-lib, and the  instance code, the build-in-lib may changed over time and have many versions.Developer can specify which version of build-in-lib they want to use.\n\ncreateENV is some code like below\n\n``` javascript\nvar env = {};\n\nfunction creataENV(id){\n  var a = 1;\n  var b = 2;\n  var def = function() {\n\n  }\n  var sdk1 = function(){\n     return '<div> sdk ' + id + '</div>';\n  }\n\n  env[id] =  {\n     def: def,\n     a: a,\n     b: b,\n     sdk1: sdk1\n  }\n  return id;\n}\nlet code = 'var sdk3 = sdk1; document.write(sdk3())';\n\nfunction createInstance(id, d) {\n   let fn = new Function('def','a', 'sdk1', d);\n   fn(env[id].def, env[id].a, env[id].sdk1);\n}\n\n\nvar env1 = creataENV('env1');\ncreateInstance(env1, code);\n\nvar env1 = creataENV('env2');\ncreateInstance(env1, code);\n```\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/261183491",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-261183491",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 261183491,
      "user": {
        "login": "Hanks10100",
        "id": 8401776,
        "avatar_url": "https://avatars3.githubusercontent.com/u/8401776?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Hanks10100",
        "html_url": "https://github.com/Hanks10100",
        "followers_url": "https://api.github.com/users/Hanks10100/followers",
        "following_url": "https://api.github.com/users/Hanks10100/following{/other_user}",
        "gists_url": "https://api.github.com/users/Hanks10100/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Hanks10100/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Hanks10100/subscriptions",
        "organizations_url": "https://api.github.com/users/Hanks10100/orgs",
        "repos_url": "https://api.github.com/users/Hanks10100/repos",
        "events_url": "https://api.github.com/users/Hanks10100/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Hanks10100/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-17T08:20:35Z",
      "updated_at": "2016-11-17T11:15:44Z",
      "body": "Thanks for the suggestion. Currently weex has a concept of `runtime`, which is similar with your `environment`.\n\nThe `runtime` is created when the weex sdk is initialized. All the instances are created in the `runtime` context, each instances has an `id`, and the singleton `runtime` is responsible for managing them.\n\nIf you want to achieve preloading the built-in library, may be #1514 is related.\n\nI personally think that each environment has only one particular version of js framework is more reasonable, otherwise the complexity will increase significantly. However, we support to use multiple \"cores\", such as _Vue 2.0_ and our own _js framework_, but the version of them is fixed.\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/261191917",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-261191917",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 261191917,
      "user": {
        "login": "seajean",
        "id": 1409603,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1409603?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/seajean",
        "html_url": "https://github.com/seajean",
        "followers_url": "https://api.github.com/users/seajean/followers",
        "following_url": "https://api.github.com/users/seajean/following{/other_user}",
        "gists_url": "https://api.github.com/users/seajean/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/seajean/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seajean/subscriptions",
        "organizations_url": "https://api.github.com/users/seajean/orgs",
        "repos_url": "https://api.github.com/users/seajean/repos",
        "events_url": "https://api.github.com/users/seajean/events{/privacy}",
        "received_events_url": "https://api.github.com/users/seajean/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-17T09:02:57Z",
      "updated_at": "2016-11-17T09:55:50Z",
      "body": "Currently we have manage to achieve  preloading build-in-lib,  and  this suggestion was  thrown out when we found that  runtime is  still  not good enough.\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/261221310",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-261221310",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 261221310,
      "user": {
        "login": "Hanks10100",
        "id": 8401776,
        "avatar_url": "https://avatars3.githubusercontent.com/u/8401776?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Hanks10100",
        "html_url": "https://github.com/Hanks10100",
        "followers_url": "https://api.github.com/users/Hanks10100/followers",
        "following_url": "https://api.github.com/users/Hanks10100/following{/other_user}",
        "gists_url": "https://api.github.com/users/Hanks10100/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Hanks10100/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Hanks10100/subscriptions",
        "organizations_url": "https://api.github.com/users/Hanks10100/orgs",
        "repos_url": "https://api.github.com/users/Hanks10100/repos",
        "events_url": "https://api.github.com/users/Hanks10100/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Hanks10100/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-17T11:15:33Z",
      "updated_at": "2016-11-17T11:15:33Z",
      "body": "We are now thinking about how to solve \"data management\" problems, which may be not simply adding `environment` or communication mechanisms, it should be more progressive.\n\nWeex is a cross platform framework, its development experience is not limited to the front-end. The data management should have an elegant solution, such as Flux, RxJS, etc (they may not appropriate). Feel free to provide your perspective.\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/261222879",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-261222879",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 261222879,
      "user": {
        "login": "seajean",
        "id": 1409603,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1409603?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/seajean",
        "html_url": "https://github.com/seajean",
        "followers_url": "https://api.github.com/users/seajean/followers",
        "following_url": "https://api.github.com/users/seajean/following{/other_user}",
        "gists_url": "https://api.github.com/users/seajean/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/seajean/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seajean/subscriptions",
        "organizations_url": "https://api.github.com/users/seajean/orgs",
        "repos_url": "https://api.github.com/users/seajean/repos",
        "events_url": "https://api.github.com/users/seajean/events{/privacy}",
        "received_events_url": "https://api.github.com/users/seajean/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-17T11:24:12Z",
      "updated_at": "2016-11-17T11:24:12Z",
      "body": "It's not just data management, but build-in-lib version control. jsfm and bundle two layer architecture is not fit to do build-in-lib version control. so we may need the environment, the third layer.\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/261438668",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-261438668",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 261438668,
      "user": {
        "login": "Hanks10100",
        "id": 8401776,
        "avatar_url": "https://avatars3.githubusercontent.com/u/8401776?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Hanks10100",
        "html_url": "https://github.com/Hanks10100",
        "followers_url": "https://api.github.com/users/Hanks10100/followers",
        "following_url": "https://api.github.com/users/Hanks10100/following{/other_user}",
        "gists_url": "https://api.github.com/users/Hanks10100/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Hanks10100/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Hanks10100/subscriptions",
        "organizations_url": "https://api.github.com/users/Hanks10100/orgs",
        "repos_url": "https://api.github.com/users/Hanks10100/repos",
        "events_url": "https://api.github.com/users/Hanks10100/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Hanks10100/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-18T03:15:53Z",
      "updated_at": "2016-11-18T03:15:53Z",
      "body": "> I personally think that each environment has only one particular version of js framework is more reasonable.\n\nWe certainly have a reason to upgrade the version, maybe it's a bugfix. So far we haven't released 1.0 or LTS version, we can't guarantee that each version of the js framework are feature-completed.\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/261821454",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-261821454",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 261821454,
      "user": {
        "login": "Jinjiang",
        "id": 206848,
        "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jinjiang",
        "html_url": "https://github.com/Jinjiang",
        "followers_url": "https://api.github.com/users/Jinjiang/followers",
        "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
        "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
        "repos_url": "https://api.github.com/users/Jinjiang/repos",
        "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-21T01:14:37Z",
      "updated_at": "2016-11-21T01:14:37Z",
      "body": "I have some more point of views.\r\n\r\n* The requirement I see is:\r\n  1. be able to prepare different (even the same but different version) built-in libs for each instance and\r\n  2. avoid download them each time\r\n* As you mentioned in #1514 those libs may disturb each other or not work well for multi-instances in the same time (or lead memory leaks etc). So it's better to run when in a special time such as `createInstance`.\r\n* We actually should do is able to run/bootstrap different code in each instance by something (for example envID as your proposal).\r\n* Additionally there is another potential user requirement: be able to detect whether a lib is supported now, even with a certain lib version.\r\n\r\nI think we could make a global static extension lib/class collections named `__weex_libs__`. To make sure each of them totally static (be able to work separately) and frozen. And the app builder can put them in a whole file and concat with `main.js` (JS framework) together.\r\nIf you want to have different versions of just one lib, or if you want to get a sub collection of all extensions, that's all easy and safe to do. This job can be done in JS bundle level with a little code first.\r\n"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/261874313",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-261874313",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 261874313,
      "user": {
        "login": "seajean",
        "id": 1409603,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1409603?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/seajean",
        "html_url": "https://github.com/seajean",
        "followers_url": "https://api.github.com/users/seajean/followers",
        "following_url": "https://api.github.com/users/seajean/following{/other_user}",
        "gists_url": "https://api.github.com/users/seajean/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/seajean/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seajean/subscriptions",
        "organizations_url": "https://api.github.com/users/seajean/orgs",
        "repos_url": "https://api.github.com/users/seajean/repos",
        "events_url": "https://api.github.com/users/seajean/events{/privacy}",
        "received_events_url": "https://api.github.com/users/seajean/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-21T08:30:50Z",
      "updated_at": "2016-11-21T08:31:28Z",
      "body": "I am afraid  doing too much  things at the same time  that  the app may hang up for a while, such as   initializing the big size built-in-libs and launching the app or  creating the instance  at the same time.  We initialize the js-framework right after the app launched,  so put the built-in-libs' code into the js-framework is not a good idea as the built-in-libs' size is a little big and have many versions.  We are thinking about  to load and execute built-in-libs  only after  user clicked  the page link.\r\n\r\nThe question is  not only  where we put our built-in-libs' code but also when we execute it,built-in-libs is  just too big too push them in the js-framework.js or the bundle.js."
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/262120381",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-262120381",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 262120381,
      "user": {
        "login": "Jinjiang",
        "id": 206848,
        "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jinjiang",
        "html_url": "https://github.com/Jinjiang",
        "followers_url": "https://api.github.com/users/Jinjiang/followers",
        "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
        "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
        "repos_url": "https://api.github.com/users/Jinjiang/repos",
        "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-22T01:24:30Z",
      "updated_at": "2016-11-22T01:24:30Z",
      "body": "I think the size of JS framework is not a big problem in native if the libs aren't executed (just defined or prepared a little). If we want to make the libs safe, it must be more chosen and executed when we creating instance.\r\nSo my suggestion is concat with JS framework (with some preparation) and execute by deps in JS bundle when createInstance."
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/262125701",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-262125701",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 262125701,
      "user": {
        "login": "seajean",
        "id": 1409603,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1409603?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/seajean",
        "html_url": "https://github.com/seajean",
        "followers_url": "https://api.github.com/users/seajean/followers",
        "following_url": "https://api.github.com/users/seajean/following{/other_user}",
        "gists_url": "https://api.github.com/users/seajean/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/seajean/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seajean/subscriptions",
        "organizations_url": "https://api.github.com/users/seajean/orgs",
        "repos_url": "https://api.github.com/users/seajean/repos",
        "events_url": "https://api.github.com/users/seajean/events{/privacy}",
        "received_events_url": "https://api.github.com/users/seajean/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-11-22T01:58:23Z",
      "updated_at": "2016-11-22T02:14:56Z",
      "body": "My solution for the built-in-libs' small  updates  is put them in cdn and check for updates each time when  the app launched, is there an alternative way to solve this?   something like CodePush?"
    },
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/268985295",
      "html_url": "https://github.com/alibaba/weex/issues/1649#issuecomment-268985295",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1649",
      "id": 268985295,
      "user": {
        "login": "Jinjiang",
        "id": 206848,
        "avatar_url": "https://avatars2.githubusercontent.com/u/206848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jinjiang",
        "html_url": "https://github.com/Jinjiang",
        "followers_url": "https://api.github.com/users/Jinjiang/followers",
        "following_url": "https://api.github.com/users/Jinjiang/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jinjiang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jinjiang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jinjiang/subscriptions",
        "organizations_url": "https://api.github.com/users/Jinjiang/orgs",
        "repos_url": "https://api.github.com/users/Jinjiang/repos",
        "events_url": "https://api.github.com/users/Jinjiang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jinjiang/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-12-23T12:49:01Z",
      "updated_at": "2016-12-23T12:49:01Z",
      "body": "After several discussions we recommend JS Service #1938 \r\nMaybe we can move on there\r\nThanks."
    }
  ],
  "created_at": "2016-11-16T08:27:37Z",
  "updated_at": "2016-12-23T12:49:01Z",
  "closed_at": "2016-12-23T12:49:01Z",
  "body": "Currently there is only instance concept,  every instance is independent, and it's difficult to share data between instances.\r\n\r\n## Recommendation\r\nimport environment concept,  before creating instance, create environment first, \r\nafter create an environment,  js framework returns  an environment ID, and then we can create an instance inside the specified environment. \r\n\r\n- developer can specify JS framework version which include  build-in-libs version.\r\n- Adding new function like  `createEnv`. \r\n- Adding param envID to createInstance function.\r\n \r\n\r\n## why we need these feature\r\n\r\n- Our js framework and build-in-libs are being developed all the time, some instance code may not compatible with the js framework we are using now,  thus developers must modify their code to adapt to our js framework. with environment , developer could specify  which version of js framework and build-in-libs their are using, and before creating instance, we can create an environment for that instance.\r\n\r\n-  Considering  another situation, several page was developed by  the same developer, and it is very  common to share data between pages.  developer could share data inside the environment with no harm to the others. Developer can declare  an environment variable and use it inside that environment.\r\n"
}
