{
  "url": "https://api.github.com/repos/alibaba/weex/issues/1995",
  "repository_url": "https://api.github.com/repos/alibaba/weex",
  "labels_url": "https://api.github.com/repos/alibaba/weex/issues/1995/labels{/name}",
  "comments_url": "https://api.github.com/repos/alibaba/weex/issues/1995/comments",
  "events_url": "https://api.github.com/repos/alibaba/weex/issues/1995/events",
  "html_url": "https://github.com/alibaba/weex/issues/1995",
  "id": 197304111,
  "number": 1995,
  "title": "Can not export the methods which have identical prefix at the same time in iOS ?",
  "user": {
    "login": "xohozu",
    "id": 2561942,
    "avatar_url": "https://avatars0.githubusercontent.com/u/2561942?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xohozu",
    "html_url": "https://github.com/xohozu",
    "followers_url": "https://api.github.com/users/xohozu/followers",
    "following_url": "https://api.github.com/users/xohozu/following{/other_user}",
    "gists_url": "https://api.github.com/users/xohozu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xohozu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xohozu/subscriptions",
    "organizations_url": "https://api.github.com/users/xohozu/orgs",
    "repos_url": "https://api.github.com/users/xohozu/repos",
    "events_url": "https://api.github.com/users/xohozu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xohozu/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": [
    {
      "url": "https://api.github.com/repos/alibaba/weex/issues/comments/268965237",
      "html_url": "https://github.com/alibaba/weex/issues/1995#issuecomment-268965237",
      "issue_url": "https://api.github.com/repos/alibaba/weex/issues/1995",
      "id": 268965237,
      "user": {
        "login": "xohozu",
        "id": 2561942,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2561942?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xohozu",
        "html_url": "https://github.com/xohozu",
        "followers_url": "https://api.github.com/users/xohozu/followers",
        "following_url": "https://api.github.com/users/xohozu/following{/other_user}",
        "gists_url": "https://api.github.com/users/xohozu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xohozu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xohozu/subscriptions",
        "organizations_url": "https://api.github.com/users/xohozu/orgs",
        "repos_url": "https://api.github.com/users/xohozu/repos",
        "events_url": "https://api.github.com/users/xohozu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xohozu/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-12-23T09:50:51Z",
      "updated_at": "2016-12-23T09:50:51Z",
      "body": "Sorry for my poor JS background knowledges. \r\n\r\nI found that JS do not supports `function overloads`, that is to say the defined functions which have same name but different parameters are not available, except last definition.\r\n```Javascript\r\nfunction openURL(url) { // not visible at all\r\n    console.log(url);\r\n};  \r\nfunction openURL(url, callback) {  // always called if invokes `openURL`\r\n    console.log(url + ', ' + callback);\r\n}; \r\n\r\nopenURL('url');  // output: url, undefined\r\n// Here caller does not provide the second parameter explicitly, so `callback` is undefined\r\n\r\nopenURL('url', function(){});  // output: url, function (){}\r\n// Works well\r\n```\r\n\r\n> As a result, it is not necessary to support to export multi methods with the same prefix in `Objective-C`.\r\n"
    }
  ],
  "created_at": "2016-12-23T02:36:29Z",
  "updated_at": "2016-12-23T09:50:51Z",
  "closed_at": "2016-12-23T09:50:51Z",
  "body": "Using Objective-C, we can define multi methods with same prefix but different parameters for our custom module, e.g. `event`. \r\nLike, \r\n```objective-c\r\n- (void)openURL:(NSString *)url;\r\n- (void)openURL:(NSString *)url callback:(WXModuleCallback)callback;\r\n```\r\nHowever, if registered the above methods with builtin MACRO,\r\n```objective-c\r\nWX_EXPORT_METHOD(@selector(openURL:))\r\nWX_EXPORT_METHOD(@selector(openURL:callback:))\r\n```\r\nthere is only one method available to call for `event module` in JS environment.\r\nAfter traced function call stacks, I found that **the same prefix methods** will be over set by last method signature, that is to say all but the last one are ignore.\r\n```objective-c\r\n// WXModuleFactory.m\r\n// line 44 - 86\r\n- (void)registerModuleMethods\r\n{\r\n   // ...\r\n   NSRange range = [method rangeOfString:@\":\"];\r\n   if (range.location != NSNotFound) {\r\n       name = [method substringToIndex:range.location];  // note: here other params are truncate simply\r\n   } else {\r\n       name = method;\r\n    }\r\n            \r\n   [_methods setObject:method forKey:name];\r\n}\r\n```\r\n\r\nIn the present, if calling `event.openURL(url);`, there is nothing happening.\r\n```Javascript\r\nvar event = require('@weex-module/event');\r\nevent.openURL(url);  // oops, nothing to do\r\nevent.openURL(url, function(result, keepAlive) {});  // well, it works\r\n```\r\n\r\nHowever, those are not documented."
}
